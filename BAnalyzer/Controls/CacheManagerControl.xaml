<!-- Copyright (c) 2025 Denys Dragunov, dragunovdenis@gmail.com
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files(the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and /or sell
copies of the Software, and to permit persons to whom the Software is furnished
to do so, subject to the following conditions :

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.-->

<UserControl x:Class="BAnalyzer.Controls.CacheManagerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" d:DesignHeight="450" d:DesignWidth="800" Name="Ui">
    <Grid>
        <Grid.Resources>
            <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
                <Setter Property="Height" Value="20"/>
                <Setter Property="Margin" Value="5"/>
            </Style>

            <Style TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
                <Setter Property="Height" Value="20"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="IsEnabled" Value="{Binding ElementName=Ui,
                    Path=Processing, Converter={StaticResource InverseBooleanConverter},
                    Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Style>

            <Style TargetType="ListBox" BasedOn="{StaticResource ListBoxStyle}"/>
            <Style TargetType="{x:Type Grid}">
                <Setter Property="Background" Value="{DynamicResource BackgroundColor}"/>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>    
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <TextBlock Grid.Row="0" Grid.Column="0" Text="Available Symbols" HorizontalAlignment="Center"/>
        <TextBlock Grid.Row="0" Grid.Column="1" Text="Pending Symbols" HorizontalAlignment="Center"/>
        <TextBlock Grid.Row="0" Grid.Column="2" Text="Cached Symbols" HorizontalAlignment="Center"/>
        <Grid Grid.Row="1" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <ComboBox Grid.Row="0" Grid.Column="0" Name="AvailableSymbolsBox"
                      ItemsSource= "{Binding ElementName= Ui, Path = AvailableSymbols}"
                      Margin="5" Width="110" Style="{StaticResource ComboBoxStyle}"
                      HorizontalAlignment="Center" IsTextSearchEnabled="True" IsEditable="True"
                      KeyDown="AvailableSymbolsBox_OnKeyDown" IsEnabled="{Binding ElementName=Ui,
                Path=Processing, Converter={StaticResource InverseBooleanConverter}}">
            </ComboBox>
            <StackPanel Grid.Row="1" Grid.Column="0" VerticalAlignment="Bottom">
                <Button Content="Add to Pending List" Click="AddPendingSymbolButton_OnClick"/>
                <Button Content="Download" Click="DownloadButton_OnClick"/>
                <Button Content="Load Cache" Click="LoadCacheButton_OnClick"/>
                <Button Content="Save Cache" Click="SaveCacheButton_OnClick"/>
            </StackPanel>
        </Grid>
        <ListBox Grid.Row="1" Grid.Column="1" Margin ="5"  ItemsSource="{Binding ElementName=Ui, Path=PendingSymbols}"/>
        <ListBox Grid.Row="1" Grid.Column="2" Margin ="5" ItemsSource="{Binding ElementName=Ui, Path=CachedSymbols}"/>
        <StatusBar Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3"
                   VerticalAlignment="Bottom" HorizontalAlignment="Stretch"
                   Background="{DynamicResource BackgroundColor}"
                   Visibility="{Binding ElementName=Ui, Path=Processing,
            Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
            <StatusBarItem>
                <TextBlock Name="ProgressInfo" Text="Processing, please wait..." Style="{StaticResource TextBlockStyle}"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</UserControl>
